Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> term DISJUNCTION term
Rule 2     expression -> term CONJUNCTION term
Rule 3     expression -> term
Rule 4     term -> ALWAYS factor
Rule 5     term -> EVENTUALLY factor
Rule 6     term -> NEXT factor
Rule 7     term -> NEGATE factor
Rule 8     term -> term IMPLIES term
Rule 9     term -> term UNTIL term
Rule 10    term -> term DISJUNCTION term
Rule 11    term -> term CONJUNCTION term
Rule 12    term -> factor
Rule 13    factor -> AP
Rule 14    factor -> ALWAYS factor
Rule 15    factor -> EVENTUALLY factor
Rule 16    factor -> NEXT factor
Rule 17    factor -> NEGATE factor
Rule 18    factor -> LPAREN expression RPAREN

Terminals, with rules where they appear

ALWAYS               : 4 14
AP                   : 13
CONJUNCTION          : 2 11
DISJUNCTION          : 1 10
EVENTUALLY           : 5 15
IMPLIES              : 8
LPAREN               : 18
NEGATE               : 7 17
NEXT                 : 6 16
RPAREN               : 18
UNTIL                : 9
error                : 

Nonterminals, with rules where they appear

expression           : 18 0
factor               : 4 5 6 7 12 14 15 16 17
term                 : 1 1 2 2 3 8 8 9 9 10 10 11 11

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . term DISJUNCTION term
    (2) expression -> . term CONJUNCTION term
    (3) expression -> . term
    (4) term -> . ALWAYS factor
    (5) term -> . EVENTUALLY factor
    (6) term -> . NEXT factor
    (7) term -> . NEGATE factor
    (8) term -> . term IMPLIES term
    (9) term -> . term UNTIL term
    (10) term -> . term DISJUNCTION term
    (11) term -> . term CONJUNCTION term
    (12) term -> . factor
    (13) factor -> . AP
    (14) factor -> . ALWAYS factor
    (15) factor -> . EVENTUALLY factor
    (16) factor -> . NEXT factor
    (17) factor -> . NEGATE factor
    (18) factor -> . LPAREN expression RPAREN

    ALWAYS          shift and go to state 3
    EVENTUALLY      shift and go to state 5
    NEXT            shift and go to state 6
    NEGATE          shift and go to state 7
    AP              shift and go to state 8
    LPAREN          shift and go to state 9

    expression                     shift and go to state 1
    term                           shift and go to state 2
    factor                         shift and go to state 4

state 1

    (0) S' -> expression .



state 2

    (1) expression -> term . DISJUNCTION term
    (2) expression -> term . CONJUNCTION term
    (3) expression -> term .
    (8) term -> term . IMPLIES term
    (9) term -> term . UNTIL term
    (10) term -> term . DISJUNCTION term
    (11) term -> term . CONJUNCTION term

    DISJUNCTION     shift and go to state 10
    CONJUNCTION     shift and go to state 11
    $end            reduce using rule 3 (expression -> term .)
    RPAREN          reduce using rule 3 (expression -> term .)
    IMPLIES         shift and go to state 12
    UNTIL           shift and go to state 13


state 3

    (4) term -> ALWAYS . factor
    (14) factor -> ALWAYS . factor
    (13) factor -> . AP
    (14) factor -> . ALWAYS factor
    (15) factor -> . EVENTUALLY factor
    (16) factor -> . NEXT factor
    (17) factor -> . NEGATE factor
    (18) factor -> . LPAREN expression RPAREN

    AP              shift and go to state 8
    ALWAYS          shift and go to state 14
    EVENTUALLY      shift and go to state 16
    NEXT            shift and go to state 17
    NEGATE          shift and go to state 18
    LPAREN          shift and go to state 9

    factor                         shift and go to state 15

state 4

    (12) term -> factor .

    DISJUNCTION     reduce using rule 12 (term -> factor .)
    CONJUNCTION     reduce using rule 12 (term -> factor .)
    IMPLIES         reduce using rule 12 (term -> factor .)
    UNTIL           reduce using rule 12 (term -> factor .)
    $end            reduce using rule 12 (term -> factor .)
    RPAREN          reduce using rule 12 (term -> factor .)


state 5

    (5) term -> EVENTUALLY . factor
    (15) factor -> EVENTUALLY . factor
    (13) factor -> . AP
    (14) factor -> . ALWAYS factor
    (15) factor -> . EVENTUALLY factor
    (16) factor -> . NEXT factor
    (17) factor -> . NEGATE factor
    (18) factor -> . LPAREN expression RPAREN

    AP              shift and go to state 8
    ALWAYS          shift and go to state 14
    EVENTUALLY      shift and go to state 16
    NEXT            shift and go to state 17
    NEGATE          shift and go to state 18
    LPAREN          shift and go to state 9

    factor                         shift and go to state 19

state 6

    (6) term -> NEXT . factor
    (16) factor -> NEXT . factor
    (13) factor -> . AP
    (14) factor -> . ALWAYS factor
    (15) factor -> . EVENTUALLY factor
    (16) factor -> . NEXT factor
    (17) factor -> . NEGATE factor
    (18) factor -> . LPAREN expression RPAREN

    AP              shift and go to state 8
    ALWAYS          shift and go to state 14
    EVENTUALLY      shift and go to state 16
    NEXT            shift and go to state 17
    NEGATE          shift and go to state 18
    LPAREN          shift and go to state 9

    factor                         shift and go to state 20

state 7

    (7) term -> NEGATE . factor
    (17) factor -> NEGATE . factor
    (13) factor -> . AP
    (14) factor -> . ALWAYS factor
    (15) factor -> . EVENTUALLY factor
    (16) factor -> . NEXT factor
    (17) factor -> . NEGATE factor
    (18) factor -> . LPAREN expression RPAREN

    AP              shift and go to state 8
    ALWAYS          shift and go to state 14
    EVENTUALLY      shift and go to state 16
    NEXT            shift and go to state 17
    NEGATE          shift and go to state 18
    LPAREN          shift and go to state 9

    factor                         shift and go to state 21

state 8

    (13) factor -> AP .

    DISJUNCTION     reduce using rule 13 (factor -> AP .)
    CONJUNCTION     reduce using rule 13 (factor -> AP .)
    IMPLIES         reduce using rule 13 (factor -> AP .)
    UNTIL           reduce using rule 13 (factor -> AP .)
    $end            reduce using rule 13 (factor -> AP .)
    RPAREN          reduce using rule 13 (factor -> AP .)


state 9

    (18) factor -> LPAREN . expression RPAREN
    (1) expression -> . term DISJUNCTION term
    (2) expression -> . term CONJUNCTION term
    (3) expression -> . term
    (4) term -> . ALWAYS factor
    (5) term -> . EVENTUALLY factor
    (6) term -> . NEXT factor
    (7) term -> . NEGATE factor
    (8) term -> . term IMPLIES term
    (9) term -> . term UNTIL term
    (10) term -> . term DISJUNCTION term
    (11) term -> . term CONJUNCTION term
    (12) term -> . factor
    (13) factor -> . AP
    (14) factor -> . ALWAYS factor
    (15) factor -> . EVENTUALLY factor
    (16) factor -> . NEXT factor
    (17) factor -> . NEGATE factor
    (18) factor -> . LPAREN expression RPAREN

    ALWAYS          shift and go to state 3
    EVENTUALLY      shift and go to state 5
    NEXT            shift and go to state 6
    NEGATE          shift and go to state 7
    AP              shift and go to state 8
    LPAREN          shift and go to state 9

    expression                     shift and go to state 22
    term                           shift and go to state 2
    factor                         shift and go to state 4

state 10

    (1) expression -> term DISJUNCTION . term
    (10) term -> term DISJUNCTION . term
    (4) term -> . ALWAYS factor
    (5) term -> . EVENTUALLY factor
    (6) term -> . NEXT factor
    (7) term -> . NEGATE factor
    (8) term -> . term IMPLIES term
    (9) term -> . term UNTIL term
    (10) term -> . term DISJUNCTION term
    (11) term -> . term CONJUNCTION term
    (12) term -> . factor
    (13) factor -> . AP
    (14) factor -> . ALWAYS factor
    (15) factor -> . EVENTUALLY factor
    (16) factor -> . NEXT factor
    (17) factor -> . NEGATE factor
    (18) factor -> . LPAREN expression RPAREN

    ALWAYS          shift and go to state 3
    EVENTUALLY      shift and go to state 5
    NEXT            shift and go to state 6
    NEGATE          shift and go to state 7
    AP              shift and go to state 8
    LPAREN          shift and go to state 9

    term                           shift and go to state 23
    factor                         shift and go to state 4

state 11

    (2) expression -> term CONJUNCTION . term
    (11) term -> term CONJUNCTION . term
    (4) term -> . ALWAYS factor
    (5) term -> . EVENTUALLY factor
    (6) term -> . NEXT factor
    (7) term -> . NEGATE factor
    (8) term -> . term IMPLIES term
    (9) term -> . term UNTIL term
    (10) term -> . term DISJUNCTION term
    (11) term -> . term CONJUNCTION term
    (12) term -> . factor
    (13) factor -> . AP
    (14) factor -> . ALWAYS factor
    (15) factor -> . EVENTUALLY factor
    (16) factor -> . NEXT factor
    (17) factor -> . NEGATE factor
    (18) factor -> . LPAREN expression RPAREN

    ALWAYS          shift and go to state 3
    EVENTUALLY      shift and go to state 5
    NEXT            shift and go to state 6
    NEGATE          shift and go to state 7
    AP              shift and go to state 8
    LPAREN          shift and go to state 9

    term                           shift and go to state 24
    factor                         shift and go to state 4

state 12

    (8) term -> term IMPLIES . term
    (4) term -> . ALWAYS factor
    (5) term -> . EVENTUALLY factor
    (6) term -> . NEXT factor
    (7) term -> . NEGATE factor
    (8) term -> . term IMPLIES term
    (9) term -> . term UNTIL term
    (10) term -> . term DISJUNCTION term
    (11) term -> . term CONJUNCTION term
    (12) term -> . factor
    (13) factor -> . AP
    (14) factor -> . ALWAYS factor
    (15) factor -> . EVENTUALLY factor
    (16) factor -> . NEXT factor
    (17) factor -> . NEGATE factor
    (18) factor -> . LPAREN expression RPAREN

    ALWAYS          shift and go to state 3
    EVENTUALLY      shift and go to state 5
    NEXT            shift and go to state 6
    NEGATE          shift and go to state 7
    AP              shift and go to state 8
    LPAREN          shift and go to state 9

    term                           shift and go to state 25
    factor                         shift and go to state 4

state 13

    (9) term -> term UNTIL . term
    (4) term -> . ALWAYS factor
    (5) term -> . EVENTUALLY factor
    (6) term -> . NEXT factor
    (7) term -> . NEGATE factor
    (8) term -> . term IMPLIES term
    (9) term -> . term UNTIL term
    (10) term -> . term DISJUNCTION term
    (11) term -> . term CONJUNCTION term
    (12) term -> . factor
    (13) factor -> . AP
    (14) factor -> . ALWAYS factor
    (15) factor -> . EVENTUALLY factor
    (16) factor -> . NEXT factor
    (17) factor -> . NEGATE factor
    (18) factor -> . LPAREN expression RPAREN

    ALWAYS          shift and go to state 3
    EVENTUALLY      shift and go to state 5
    NEXT            shift and go to state 6
    NEGATE          shift and go to state 7
    AP              shift and go to state 8
    LPAREN          shift and go to state 9

    term                           shift and go to state 26
    factor                         shift and go to state 4

state 14

    (14) factor -> ALWAYS . factor
    (13) factor -> . AP
    (14) factor -> . ALWAYS factor
    (15) factor -> . EVENTUALLY factor
    (16) factor -> . NEXT factor
    (17) factor -> . NEGATE factor
    (18) factor -> . LPAREN expression RPAREN

    AP              shift and go to state 8
    ALWAYS          shift and go to state 14
    EVENTUALLY      shift and go to state 16
    NEXT            shift and go to state 17
    NEGATE          shift and go to state 18
    LPAREN          shift and go to state 9

    factor                         shift and go to state 27

state 15

    (4) term -> ALWAYS factor .
    (14) factor -> ALWAYS factor .

  ! reduce/reduce conflict for DISJUNCTION resolved using rule 4 (term -> ALWAYS factor .)
  ! reduce/reduce conflict for CONJUNCTION resolved using rule 4 (term -> ALWAYS factor .)
  ! reduce/reduce conflict for IMPLIES resolved using rule 4 (term -> ALWAYS factor .)
  ! reduce/reduce conflict for UNTIL resolved using rule 4 (term -> ALWAYS factor .)
  ! reduce/reduce conflict for $end resolved using rule 4 (term -> ALWAYS factor .)
  ! reduce/reduce conflict for RPAREN resolved using rule 4 (term -> ALWAYS factor .)
    DISJUNCTION     reduce using rule 4 (term -> ALWAYS factor .)
    CONJUNCTION     reduce using rule 4 (term -> ALWAYS factor .)
    IMPLIES         reduce using rule 4 (term -> ALWAYS factor .)
    UNTIL           reduce using rule 4 (term -> ALWAYS factor .)
    $end            reduce using rule 4 (term -> ALWAYS factor .)
    RPAREN          reduce using rule 4 (term -> ALWAYS factor .)

  ! DISJUNCTION     [ reduce using rule 14 (factor -> ALWAYS factor .) ]
  ! CONJUNCTION     [ reduce using rule 14 (factor -> ALWAYS factor .) ]
  ! IMPLIES         [ reduce using rule 14 (factor -> ALWAYS factor .) ]
  ! UNTIL           [ reduce using rule 14 (factor -> ALWAYS factor .) ]
  ! $end            [ reduce using rule 14 (factor -> ALWAYS factor .) ]
  ! RPAREN          [ reduce using rule 14 (factor -> ALWAYS factor .) ]


state 16

    (15) factor -> EVENTUALLY . factor
    (13) factor -> . AP
    (14) factor -> . ALWAYS factor
    (15) factor -> . EVENTUALLY factor
    (16) factor -> . NEXT factor
    (17) factor -> . NEGATE factor
    (18) factor -> . LPAREN expression RPAREN

    AP              shift and go to state 8
    ALWAYS          shift and go to state 14
    EVENTUALLY      shift and go to state 16
    NEXT            shift and go to state 17
    NEGATE          shift and go to state 18
    LPAREN          shift and go to state 9

    factor                         shift and go to state 28

state 17

    (16) factor -> NEXT . factor
    (13) factor -> . AP
    (14) factor -> . ALWAYS factor
    (15) factor -> . EVENTUALLY factor
    (16) factor -> . NEXT factor
    (17) factor -> . NEGATE factor
    (18) factor -> . LPAREN expression RPAREN

    AP              shift and go to state 8
    ALWAYS          shift and go to state 14
    EVENTUALLY      shift and go to state 16
    NEXT            shift and go to state 17
    NEGATE          shift and go to state 18
    LPAREN          shift and go to state 9

    factor                         shift and go to state 29

state 18

    (17) factor -> NEGATE . factor
    (13) factor -> . AP
    (14) factor -> . ALWAYS factor
    (15) factor -> . EVENTUALLY factor
    (16) factor -> . NEXT factor
    (17) factor -> . NEGATE factor
    (18) factor -> . LPAREN expression RPAREN

    AP              shift and go to state 8
    ALWAYS          shift and go to state 14
    EVENTUALLY      shift and go to state 16
    NEXT            shift and go to state 17
    NEGATE          shift and go to state 18
    LPAREN          shift and go to state 9

    factor                         shift and go to state 30

state 19

    (5) term -> EVENTUALLY factor .
    (15) factor -> EVENTUALLY factor .

  ! reduce/reduce conflict for DISJUNCTION resolved using rule 5 (term -> EVENTUALLY factor .)
  ! reduce/reduce conflict for CONJUNCTION resolved using rule 5 (term -> EVENTUALLY factor .)
  ! reduce/reduce conflict for IMPLIES resolved using rule 5 (term -> EVENTUALLY factor .)
  ! reduce/reduce conflict for UNTIL resolved using rule 5 (term -> EVENTUALLY factor .)
  ! reduce/reduce conflict for $end resolved using rule 5 (term -> EVENTUALLY factor .)
  ! reduce/reduce conflict for RPAREN resolved using rule 5 (term -> EVENTUALLY factor .)
    DISJUNCTION     reduce using rule 5 (term -> EVENTUALLY factor .)
    CONJUNCTION     reduce using rule 5 (term -> EVENTUALLY factor .)
    IMPLIES         reduce using rule 5 (term -> EVENTUALLY factor .)
    UNTIL           reduce using rule 5 (term -> EVENTUALLY factor .)
    $end            reduce using rule 5 (term -> EVENTUALLY factor .)
    RPAREN          reduce using rule 5 (term -> EVENTUALLY factor .)

  ! DISJUNCTION     [ reduce using rule 15 (factor -> EVENTUALLY factor .) ]
  ! CONJUNCTION     [ reduce using rule 15 (factor -> EVENTUALLY factor .) ]
  ! IMPLIES         [ reduce using rule 15 (factor -> EVENTUALLY factor .) ]
  ! UNTIL           [ reduce using rule 15 (factor -> EVENTUALLY factor .) ]
  ! $end            [ reduce using rule 15 (factor -> EVENTUALLY factor .) ]
  ! RPAREN          [ reduce using rule 15 (factor -> EVENTUALLY factor .) ]


state 20

    (6) term -> NEXT factor .
    (16) factor -> NEXT factor .

  ! reduce/reduce conflict for DISJUNCTION resolved using rule 6 (term -> NEXT factor .)
  ! reduce/reduce conflict for CONJUNCTION resolved using rule 6 (term -> NEXT factor .)
  ! reduce/reduce conflict for IMPLIES resolved using rule 6 (term -> NEXT factor .)
  ! reduce/reduce conflict for UNTIL resolved using rule 6 (term -> NEXT factor .)
  ! reduce/reduce conflict for $end resolved using rule 6 (term -> NEXT factor .)
  ! reduce/reduce conflict for RPAREN resolved using rule 6 (term -> NEXT factor .)
    DISJUNCTION     reduce using rule 6 (term -> NEXT factor .)
    CONJUNCTION     reduce using rule 6 (term -> NEXT factor .)
    IMPLIES         reduce using rule 6 (term -> NEXT factor .)
    UNTIL           reduce using rule 6 (term -> NEXT factor .)
    $end            reduce using rule 6 (term -> NEXT factor .)
    RPAREN          reduce using rule 6 (term -> NEXT factor .)

  ! DISJUNCTION     [ reduce using rule 16 (factor -> NEXT factor .) ]
  ! CONJUNCTION     [ reduce using rule 16 (factor -> NEXT factor .) ]
  ! IMPLIES         [ reduce using rule 16 (factor -> NEXT factor .) ]
  ! UNTIL           [ reduce using rule 16 (factor -> NEXT factor .) ]
  ! $end            [ reduce using rule 16 (factor -> NEXT factor .) ]
  ! RPAREN          [ reduce using rule 16 (factor -> NEXT factor .) ]


state 21

    (7) term -> NEGATE factor .
    (17) factor -> NEGATE factor .

  ! reduce/reduce conflict for DISJUNCTION resolved using rule 7 (term -> NEGATE factor .)
  ! reduce/reduce conflict for CONJUNCTION resolved using rule 7 (term -> NEGATE factor .)
  ! reduce/reduce conflict for IMPLIES resolved using rule 7 (term -> NEGATE factor .)
  ! reduce/reduce conflict for UNTIL resolved using rule 7 (term -> NEGATE factor .)
  ! reduce/reduce conflict for $end resolved using rule 7 (term -> NEGATE factor .)
  ! reduce/reduce conflict for RPAREN resolved using rule 7 (term -> NEGATE factor .)
    DISJUNCTION     reduce using rule 7 (term -> NEGATE factor .)
    CONJUNCTION     reduce using rule 7 (term -> NEGATE factor .)
    IMPLIES         reduce using rule 7 (term -> NEGATE factor .)
    UNTIL           reduce using rule 7 (term -> NEGATE factor .)
    $end            reduce using rule 7 (term -> NEGATE factor .)
    RPAREN          reduce using rule 7 (term -> NEGATE factor .)

  ! DISJUNCTION     [ reduce using rule 17 (factor -> NEGATE factor .) ]
  ! CONJUNCTION     [ reduce using rule 17 (factor -> NEGATE factor .) ]
  ! IMPLIES         [ reduce using rule 17 (factor -> NEGATE factor .) ]
  ! UNTIL           [ reduce using rule 17 (factor -> NEGATE factor .) ]
  ! $end            [ reduce using rule 17 (factor -> NEGATE factor .) ]
  ! RPAREN          [ reduce using rule 17 (factor -> NEGATE factor .) ]


state 22

    (18) factor -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 31


state 23

    (1) expression -> term DISJUNCTION term .
    (10) term -> term DISJUNCTION term .
    (8) term -> term . IMPLIES term
    (9) term -> term . UNTIL term
    (10) term -> term . DISJUNCTION term
    (11) term -> term . CONJUNCTION term

  ! reduce/reduce conflict for $end resolved using rule 1 (expression -> term DISJUNCTION term .)
  ! reduce/reduce conflict for RPAREN resolved using rule 1 (expression -> term DISJUNCTION term .)
  ! shift/reduce conflict for IMPLIES resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for DISJUNCTION resolved as shift
  ! shift/reduce conflict for CONJUNCTION resolved as shift
    $end            reduce using rule 1 (expression -> term DISJUNCTION term .)
    RPAREN          reduce using rule 1 (expression -> term DISJUNCTION term .)
    IMPLIES         shift and go to state 12
    UNTIL           shift and go to state 13
    DISJUNCTION     shift and go to state 32
    CONJUNCTION     shift and go to state 33

  ! DISJUNCTION     [ reduce using rule 10 (term -> term DISJUNCTION term .) ]
  ! CONJUNCTION     [ reduce using rule 10 (term -> term DISJUNCTION term .) ]
  ! IMPLIES         [ reduce using rule 10 (term -> term DISJUNCTION term .) ]
  ! UNTIL           [ reduce using rule 10 (term -> term DISJUNCTION term .) ]
  ! $end            [ reduce using rule 10 (term -> term DISJUNCTION term .) ]
  ! RPAREN          [ reduce using rule 10 (term -> term DISJUNCTION term .) ]


state 24

    (2) expression -> term CONJUNCTION term .
    (11) term -> term CONJUNCTION term .
    (8) term -> term . IMPLIES term
    (9) term -> term . UNTIL term
    (10) term -> term . DISJUNCTION term
    (11) term -> term . CONJUNCTION term

  ! reduce/reduce conflict for $end resolved using rule 2 (expression -> term CONJUNCTION term .)
  ! reduce/reduce conflict for RPAREN resolved using rule 2 (expression -> term CONJUNCTION term .)
  ! shift/reduce conflict for IMPLIES resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for DISJUNCTION resolved as shift
  ! shift/reduce conflict for CONJUNCTION resolved as shift
    $end            reduce using rule 2 (expression -> term CONJUNCTION term .)
    RPAREN          reduce using rule 2 (expression -> term CONJUNCTION term .)
    IMPLIES         shift and go to state 12
    UNTIL           shift and go to state 13
    DISJUNCTION     shift and go to state 32
    CONJUNCTION     shift and go to state 33

  ! DISJUNCTION     [ reduce using rule 11 (term -> term CONJUNCTION term .) ]
  ! CONJUNCTION     [ reduce using rule 11 (term -> term CONJUNCTION term .) ]
  ! IMPLIES         [ reduce using rule 11 (term -> term CONJUNCTION term .) ]
  ! UNTIL           [ reduce using rule 11 (term -> term CONJUNCTION term .) ]
  ! $end            [ reduce using rule 11 (term -> term CONJUNCTION term .) ]
  ! RPAREN          [ reduce using rule 11 (term -> term CONJUNCTION term .) ]


state 25

    (8) term -> term IMPLIES term .
    (8) term -> term . IMPLIES term
    (9) term -> term . UNTIL term
    (10) term -> term . DISJUNCTION term
    (11) term -> term . CONJUNCTION term

  ! shift/reduce conflict for IMPLIES resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for DISJUNCTION resolved as shift
  ! shift/reduce conflict for CONJUNCTION resolved as shift
    $end            reduce using rule 8 (term -> term IMPLIES term .)
    RPAREN          reduce using rule 8 (term -> term IMPLIES term .)
    IMPLIES         shift and go to state 12
    UNTIL           shift and go to state 13
    DISJUNCTION     shift and go to state 32
    CONJUNCTION     shift and go to state 33

  ! DISJUNCTION     [ reduce using rule 8 (term -> term IMPLIES term .) ]
  ! CONJUNCTION     [ reduce using rule 8 (term -> term IMPLIES term .) ]
  ! IMPLIES         [ reduce using rule 8 (term -> term IMPLIES term .) ]
  ! UNTIL           [ reduce using rule 8 (term -> term IMPLIES term .) ]


state 26

    (9) term -> term UNTIL term .
    (8) term -> term . IMPLIES term
    (9) term -> term . UNTIL term
    (10) term -> term . DISJUNCTION term
    (11) term -> term . CONJUNCTION term

  ! shift/reduce conflict for IMPLIES resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for DISJUNCTION resolved as shift
  ! shift/reduce conflict for CONJUNCTION resolved as shift
    $end            reduce using rule 9 (term -> term UNTIL term .)
    RPAREN          reduce using rule 9 (term -> term UNTIL term .)
    IMPLIES         shift and go to state 12
    UNTIL           shift and go to state 13
    DISJUNCTION     shift and go to state 32
    CONJUNCTION     shift and go to state 33

  ! DISJUNCTION     [ reduce using rule 9 (term -> term UNTIL term .) ]
  ! CONJUNCTION     [ reduce using rule 9 (term -> term UNTIL term .) ]
  ! IMPLIES         [ reduce using rule 9 (term -> term UNTIL term .) ]
  ! UNTIL           [ reduce using rule 9 (term -> term UNTIL term .) ]


state 27

    (14) factor -> ALWAYS factor .

    DISJUNCTION     reduce using rule 14 (factor -> ALWAYS factor .)
    CONJUNCTION     reduce using rule 14 (factor -> ALWAYS factor .)
    IMPLIES         reduce using rule 14 (factor -> ALWAYS factor .)
    UNTIL           reduce using rule 14 (factor -> ALWAYS factor .)
    $end            reduce using rule 14 (factor -> ALWAYS factor .)
    RPAREN          reduce using rule 14 (factor -> ALWAYS factor .)


state 28

    (15) factor -> EVENTUALLY factor .

    DISJUNCTION     reduce using rule 15 (factor -> EVENTUALLY factor .)
    CONJUNCTION     reduce using rule 15 (factor -> EVENTUALLY factor .)
    IMPLIES         reduce using rule 15 (factor -> EVENTUALLY factor .)
    UNTIL           reduce using rule 15 (factor -> EVENTUALLY factor .)
    $end            reduce using rule 15 (factor -> EVENTUALLY factor .)
    RPAREN          reduce using rule 15 (factor -> EVENTUALLY factor .)


state 29

    (16) factor -> NEXT factor .

    DISJUNCTION     reduce using rule 16 (factor -> NEXT factor .)
    CONJUNCTION     reduce using rule 16 (factor -> NEXT factor .)
    IMPLIES         reduce using rule 16 (factor -> NEXT factor .)
    UNTIL           reduce using rule 16 (factor -> NEXT factor .)
    $end            reduce using rule 16 (factor -> NEXT factor .)
    RPAREN          reduce using rule 16 (factor -> NEXT factor .)


state 30

    (17) factor -> NEGATE factor .

    DISJUNCTION     reduce using rule 17 (factor -> NEGATE factor .)
    CONJUNCTION     reduce using rule 17 (factor -> NEGATE factor .)
    IMPLIES         reduce using rule 17 (factor -> NEGATE factor .)
    UNTIL           reduce using rule 17 (factor -> NEGATE factor .)
    $end            reduce using rule 17 (factor -> NEGATE factor .)
    RPAREN          reduce using rule 17 (factor -> NEGATE factor .)


state 31

    (18) factor -> LPAREN expression RPAREN .

    DISJUNCTION     reduce using rule 18 (factor -> LPAREN expression RPAREN .)
    CONJUNCTION     reduce using rule 18 (factor -> LPAREN expression RPAREN .)
    IMPLIES         reduce using rule 18 (factor -> LPAREN expression RPAREN .)
    UNTIL           reduce using rule 18 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 18 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 18 (factor -> LPAREN expression RPAREN .)


state 32

    (10) term -> term DISJUNCTION . term
    (4) term -> . ALWAYS factor
    (5) term -> . EVENTUALLY factor
    (6) term -> . NEXT factor
    (7) term -> . NEGATE factor
    (8) term -> . term IMPLIES term
    (9) term -> . term UNTIL term
    (10) term -> . term DISJUNCTION term
    (11) term -> . term CONJUNCTION term
    (12) term -> . factor
    (13) factor -> . AP
    (14) factor -> . ALWAYS factor
    (15) factor -> . EVENTUALLY factor
    (16) factor -> . NEXT factor
    (17) factor -> . NEGATE factor
    (18) factor -> . LPAREN expression RPAREN

    ALWAYS          shift and go to state 3
    EVENTUALLY      shift and go to state 5
    NEXT            shift and go to state 6
    NEGATE          shift and go to state 7
    AP              shift and go to state 8
    LPAREN          shift and go to state 9

    term                           shift and go to state 34
    factor                         shift and go to state 4

state 33

    (11) term -> term CONJUNCTION . term
    (4) term -> . ALWAYS factor
    (5) term -> . EVENTUALLY factor
    (6) term -> . NEXT factor
    (7) term -> . NEGATE factor
    (8) term -> . term IMPLIES term
    (9) term -> . term UNTIL term
    (10) term -> . term DISJUNCTION term
    (11) term -> . term CONJUNCTION term
    (12) term -> . factor
    (13) factor -> . AP
    (14) factor -> . ALWAYS factor
    (15) factor -> . EVENTUALLY factor
    (16) factor -> . NEXT factor
    (17) factor -> . NEGATE factor
    (18) factor -> . LPAREN expression RPAREN

    ALWAYS          shift and go to state 3
    EVENTUALLY      shift and go to state 5
    NEXT            shift and go to state 6
    NEGATE          shift and go to state 7
    AP              shift and go to state 8
    LPAREN          shift and go to state 9

    term                           shift and go to state 35
    factor                         shift and go to state 4

state 34

    (10) term -> term DISJUNCTION term .
    (8) term -> term . IMPLIES term
    (9) term -> term . UNTIL term
    (10) term -> term . DISJUNCTION term
    (11) term -> term . CONJUNCTION term

  ! shift/reduce conflict for IMPLIES resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for DISJUNCTION resolved as shift
  ! shift/reduce conflict for CONJUNCTION resolved as shift
    $end            reduce using rule 10 (term -> term DISJUNCTION term .)
    RPAREN          reduce using rule 10 (term -> term DISJUNCTION term .)
    IMPLIES         shift and go to state 12
    UNTIL           shift and go to state 13
    DISJUNCTION     shift and go to state 32
    CONJUNCTION     shift and go to state 33

  ! IMPLIES         [ reduce using rule 10 (term -> term DISJUNCTION term .) ]
  ! UNTIL           [ reduce using rule 10 (term -> term DISJUNCTION term .) ]
  ! DISJUNCTION     [ reduce using rule 10 (term -> term DISJUNCTION term .) ]
  ! CONJUNCTION     [ reduce using rule 10 (term -> term DISJUNCTION term .) ]


state 35

    (11) term -> term CONJUNCTION term .
    (8) term -> term . IMPLIES term
    (9) term -> term . UNTIL term
    (10) term -> term . DISJUNCTION term
    (11) term -> term . CONJUNCTION term

  ! shift/reduce conflict for IMPLIES resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for DISJUNCTION resolved as shift
  ! shift/reduce conflict for CONJUNCTION resolved as shift
    $end            reduce using rule 11 (term -> term CONJUNCTION term .)
    RPAREN          reduce using rule 11 (term -> term CONJUNCTION term .)
    IMPLIES         shift and go to state 12
    UNTIL           shift and go to state 13
    DISJUNCTION     shift and go to state 32
    CONJUNCTION     shift and go to state 33

  ! IMPLIES         [ reduce using rule 11 (term -> term CONJUNCTION term .) ]
  ! UNTIL           [ reduce using rule 11 (term -> term CONJUNCTION term .) ]
  ! DISJUNCTION     [ reduce using rule 11 (term -> term CONJUNCTION term .) ]
  ! CONJUNCTION     [ reduce using rule 11 (term -> term CONJUNCTION term .) ]

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IMPLIES in state 23 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 23 resolved as shift
WARNING: shift/reduce conflict for DISJUNCTION in state 23 resolved as shift
WARNING: shift/reduce conflict for CONJUNCTION in state 23 resolved as shift
WARNING: shift/reduce conflict for IMPLIES in state 24 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 24 resolved as shift
WARNING: shift/reduce conflict for DISJUNCTION in state 24 resolved as shift
WARNING: shift/reduce conflict for CONJUNCTION in state 24 resolved as shift
WARNING: shift/reduce conflict for IMPLIES in state 25 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 25 resolved as shift
WARNING: shift/reduce conflict for DISJUNCTION in state 25 resolved as shift
WARNING: shift/reduce conflict for CONJUNCTION in state 25 resolved as shift
WARNING: shift/reduce conflict for IMPLIES in state 26 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 26 resolved as shift
WARNING: shift/reduce conflict for DISJUNCTION in state 26 resolved as shift
WARNING: shift/reduce conflict for CONJUNCTION in state 26 resolved as shift
WARNING: shift/reduce conflict for IMPLIES in state 34 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 34 resolved as shift
WARNING: shift/reduce conflict for DISJUNCTION in state 34 resolved as shift
WARNING: shift/reduce conflict for CONJUNCTION in state 34 resolved as shift
WARNING: shift/reduce conflict for IMPLIES in state 35 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 35 resolved as shift
WARNING: shift/reduce conflict for DISJUNCTION in state 35 resolved as shift
WARNING: shift/reduce conflict for CONJUNCTION in state 35 resolved as shift
WARNING: reduce/reduce conflict in state 15 resolved using rule (term -> ALWAYS factor)
WARNING: rejected rule (factor -> ALWAYS factor) in state 15
WARNING: reduce/reduce conflict in state 19 resolved using rule (term -> EVENTUALLY factor)
WARNING: rejected rule (factor -> EVENTUALLY factor) in state 19
WARNING: reduce/reduce conflict in state 20 resolved using rule (term -> NEXT factor)
WARNING: rejected rule (factor -> NEXT factor) in state 20
WARNING: reduce/reduce conflict in state 21 resolved using rule (term -> NEGATE factor)
WARNING: rejected rule (factor -> NEGATE factor) in state 21
WARNING: reduce/reduce conflict in state 23 resolved using rule (expression -> term DISJUNCTION term)
WARNING: rejected rule (term -> term DISJUNCTION term) in state 23
WARNING: reduce/reduce conflict in state 24 resolved using rule (expression -> term CONJUNCTION term)
WARNING: rejected rule (term -> term CONJUNCTION term) in state 24
